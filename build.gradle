plugins {
    id "java-library"
    id "org.openmicroscopy.project" version "5.7.2"
    id "org.openmicroscopy.dsl" version "5.5.4"
}

group = "org.openmicroscopy"
version = "5.7.4-SNAPSHOT"

ext {
    databaseType = "psql"
}
repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'https://artifacts.openmicroscopy.org/artifactory/ome.releases'
    }
    maven {
        url 'https://artifacts.openmicroscopy.org/artifactory/ome.external'
    }

    maven {
        name 'Unidata'
        url 'https://artifacts.unidata.ucar.edu/repository/unidata-all/'
    }
    maven {
        url 'https://maven.scijava.org/content/groups/public/'
    }
}

compileJava {
    options.release = 8
}

dependencies {
    testImplementation("org.testng:testng:7.5")

    // Needs updating to later versions
    api("org.springframework:spring-orm:4.3.30.RELEASE")
    api("org.springframework:spring-context:4.3.30.RELEASE")
    api("org.springframework:spring-context-support:4.3.30.RELEASE")
    api("org.hibernate:hibernate-core:3.6.10.Final"){
        exclude group: "dom4j", module: "dom4j"
    }
    api("org.hibernate:hibernate-search:3.4.2.Final"){
        exclude group: "dom4j", module: "dom4j"
    }
    api("org.dom4j:dom4j:2.1.4")

    // Our libraries
    api("ome:formats-gpl:8.3.0")

}

test {
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
    // enable TestNG support (default is JUnit)
    useTestNG() {
        suites "src/test/resources/unit.testng.xml"
    }
    dependsOn cleanTest
}

dsl {
    database databaseType

    outputDir file("build/${databaseType}")

    multiFile {
        java {
            template "object.vm"
            outputDir "java"
            formatOutput = { st ->
                "${st.getPackage()}/${st.getShortname()}.java"
            }
        }
    }

    singleFile {
        hibernate {
            template "cfg.vm"
            outputFile "resources/hibernate.cfg.xml"
        }

        sql {
            template "views.vm"
            outputFile "resources/views.sql"
        }

        enums {
            template "enums.vm"
            outputFile "resources/enums.properties"
        }
    }
}

processResources {
    with copySpec {
        from 'src/main/resources'
        // Set db profile
        filter { String line ->
            line.startsWith('omero.db.profile') ? 'omero.db.profile='+databaseType : line
        }
    }
}
